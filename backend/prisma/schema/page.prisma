model Page {
    id            String     @id @default(uuid()) @db.Uuid()
    name          String
    phoneNumber   String
    avtUrl        String?
    backGroundurl String?
    updateAt      DateTime?
    status        StatusPage @default(ACTIVE)
    liked         Boolean    @default(false)

    // detail location
    address String?
    city    String?
    zipcode String?

    // followers
    pageFollowers PageFollow[]

    // post
    posts Post[]

    // about
    categories  String
    socialLinks SocialLinkeds[]
    createAt    DateTime        @default(now())
    bio         String?

    admins PageAdmin[]
}

model PageFollow {
    id         String   @id @default(uuid())
    userId     String   @db.Uuid
    pageId     String   @db.Uuid
    followedAt DateTime @default(now())

    user User @relation(fields: [userId], references: [id], onDelete: Cascade)
    page Page @relation(fields: [pageId], references: [id], onDelete: Cascade)

    @@unique([userId, pageId])
}

model PageAdmin {
    id      String    @id @default(uuid())
    userId  String    @db.Uuid
    pageId  String    @db.Uuid
    role    AdminRole @default(OWNER)
    addedAt DateTime  @default(now())

    user User @relation(fields: [userId], references: [id], onDelete: Cascade)
    page Page @relation(fields: [pageId], references: [id], onDelete: Cascade)

    @@unique([userId, pageId])
}

enum AdminRole {
    OWNER
    EDITOR
    MODERATOR
    ANALYST
}

enum StatusPage {
    ACTIVE
    UNPUBLISHED // ẩn
    DELETED // bị xóa
    RESTRICTED // bị giới hạn
    BANNED // cấm hoàn toàn 
}

enum Service {
    DELIVERY
    CONTACTLESS
    TAKEOUT
    DINEIN
    OUTDOORSEATING
    ONLINEBOOKING
    RESERVATIONS
    CUBSIDEPICKUP
    INSTOREPICKUP
    INSTORESHOPPING
    INPERSONCLASSES
    ONLINECLASSES
}
