
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('./runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.11.1
 * Query Engine version: f40f79ec31188888a2e33acda0ecc8fd10a853a9
 */
Prisma.prismaVersion = {
  client: "6.11.1",
  engine: "f40f79ec31188888a2e33acda0ecc8fd10a853a9"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.MediaScalarFieldEnum = {
  id: 'id',
  originalName: 'originalName',
  url: 'url',
  secure_url: 'secure_url',
  width: 'width',
  height: 'height',
  format: 'format',
  resourceType: 'resourceType',
  createdAt: 'createdAt'
};

exports.Prisma.RelationLoadStrategy = {
  query: 'query',
  join: 'join'
};

exports.Prisma.NotificationScalarFieldEnum = {
  id: 'id',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  readAt: 'readAt',
  deletedAt: 'deletedAt',
  recipientId: 'recipientId',
  actorId: 'actorId',
  type: 'type',
  title: 'title',
  message: 'message',
  status: 'status',
  priority: 'priority',
  postId: 'postId',
  commentId: 'commentId',
  reactionId: 'reactionId',
  friendRequestId: 'friendRequestId',
  imageUrl: 'imageUrl',
  actionUrl: 'actionUrl',
  metadata: 'metadata',
  groupId: 'groupId',
  isGrouped: 'isGrouped',
  groupCount: 'groupCount'
};

exports.Prisma.PostScalarFieldEnum = {
  id: 'id',
  authorId: 'authorId',
  createdAt: 'createdAt',
  updateAt: 'updateAt',
  scope: 'scope',
  status: 'status',
  content: 'content',
  medias: 'medias'
};

exports.Prisma.CommentScalarFieldEnum = {
  id: 'id',
  authorId: 'authorId',
  content: 'content',
  postId: 'postId',
  parentId: 'parentId',
  createdAt: 'createdAt',
  updateAt: 'updateAt',
  deletedAt: 'deletedAt',
  updateHistories: 'updateHistories',
  status: 'status'
};

exports.Prisma.ReactionScalarFieldEnum = {
  id: 'id',
  authorId: 'authorId',
  type: 'type',
  postId: 'postId',
  commentId: 'commentId'
};

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  profileId: 'profileId',
  createdAt: 'createdAt',
  updateAt: 'updateAt',
  status: 'status',
  flags: 'flags',
  roles: 'roles',
  primaryEmailId: 'primaryEmailId',
  primaryPhoneId: 'primaryPhoneId',
  hashedPassword: 'hashedPassword',
  displayName: 'displayName',
  username: 'username',
  gender: 'gender',
  pronoun: 'pronoun',
  birthday: 'birthday',
  biography: 'biography',
  websites: 'websites',
  language: 'language',
  deletedAt: 'deletedAt',
  avatarUrl: 'avatarUrl',
  bannerUrl: 'bannerUrl'
};

exports.Prisma.FriendshipScalarFieldEnum = {
  requesterId: 'requesterId',
  addresseeId: 'addresseeId',
  status: 'status',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.RelationScalarFieldEnum = {
  sourceUserId: 'sourceUserId',
  targetUserId: 'targetUserId',
  type: 'type',
  status: 'status',
  scope: 'scope',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.EmailScalarFieldEnum = {
  id: 'id',
  value: 'value',
  scope: 'scope',
  subEmailsUserId: 'subEmailsUserId'
};

exports.Prisma.PhoneScalarFieldEnum = {
  id: 'id',
  value: 'value',
  scope: 'scope',
  subPhonesUserId: 'subPhonesUserId'
};

exports.Prisma.SocialLinkedsScalarFieldEnum = {
  id: 'id',
  platform: 'platform',
  userId: 'userId'
};

exports.Prisma.AuthenticationScalarFieldEnum = {
  code: 'code',
  expiresAt: 'expiresAt',
  type: 'type',
  userId: 'userId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SessionScalarFieldEnum = {
  id: 'id',
  expiresAt: 'expiresAt',
  createdAt: 'createdAt',
  lastLoginAt: 'lastLoginAt',
  refreshTokenHashed: 'refreshTokenHashed',
  deviceName: 'deviceName',
  userAgent: 'userAgent',
  ipAddress: 'ipAddress',
  userId: 'userId',
  revoked: 'revoked'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullableJsonNullValueInput = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};
exports.ResourceType = exports.$Enums.ResourceType = {
  image: 'image',
  video: 'video',
  raw: 'raw',
  auto: 'auto'
};

exports.NotificationType = exports.$Enums.NotificationType = {
  POST_LIKE: 'POST_LIKE',
  POST_COMMENT: 'POST_COMMENT',
  POST_SHARE: 'POST_SHARE',
  COMMENT_LIKE: 'COMMENT_LIKE',
  COMMENT_REPLY: 'COMMENT_REPLY',
  FRIEND_REQUEST: 'FRIEND_REQUEST',
  FRIEND_REQUEST_ACCEPTED: 'FRIEND_REQUEST_ACCEPTED',
  FRIEND_SUGGESTION: 'FRIEND_SUGGESTION',
  PROFILE_VIEW: 'PROFILE_VIEW',
  PROFILE_UPDATE: 'PROFILE_UPDATE',
  BIRTHDAY_REMINDER: 'BIRTHDAY_REMINDER',
  GROUP_INVITE: 'GROUP_INVITE',
  GROUP_POST: 'GROUP_POST',
  GROUP_EVENT: 'GROUP_EVENT',
  PAGE_LIKE: 'PAGE_LIKE',
  PAGE_POST: 'PAGE_POST',
  PAGE_EVENT: 'PAGE_EVENT',
  EVENT_INVITE: 'EVENT_INVITE',
  EVENT_UPDATE: 'EVENT_UPDATE',
  EVENT_REMINDER: 'EVENT_REMINDER',
  MARKETPLACE_LISTING: 'MARKETPLACE_LISTING',
  MARKETPLACE_MESSAGE: 'MARKETPLACE_MESSAGE',
  SECURITY_ALERT: 'SECURITY_ALERT',
  ACCOUNT_UPDATE: 'ACCOUNT_UPDATE',
  POLICY_UPDATE: 'POLICY_UPDATE',
  MAINTENANCE: 'MAINTENANCE',
  LIVE_STREAM: 'LIVE_STREAM',
  STORY_MENTION: 'STORY_MENTION',
  STORY_REACTION: 'STORY_REACTION',
  MEMORY_REMINDER: 'MEMORY_REMINDER',
  PHOTO_TAG: 'PHOTO_TAG',
  PHOTO_APPROVAL: 'PHOTO_APPROVAL'
};

exports.NotificationStatus = exports.$Enums.NotificationStatus = {
  UNREAD: 'UNREAD',
  READ: 'READ',
  ARCHIVED: 'ARCHIVED',
  DELETED: 'DELETED'
};

exports.NotificationPriority = exports.$Enums.NotificationPriority = {
  LOW: 'LOW',
  NORMAL: 'NORMAL',
  HIGH: 'HIGH',
  URGENT: 'URGENT'
};

exports.Scope = exports.$Enums.Scope = {
  EVERYONE: 'EVERYONE',
  FRIENDS_ONLY: 'FRIENDS_ONLY',
  PRIVATE: 'PRIVATE'
};

exports.PostStatus = exports.$Enums.PostStatus = {
  DISPLAY: 'DISPLAY',
  DELETED: 'DELETED',
  STORAGED: 'STORAGED',
  SUSPENDED: 'SUSPENDED',
  HIDDEN: 'HIDDEN'
};

exports.CommentStatus = exports.$Enums.CommentStatus = {
  DISPLAY: 'DISPLAY',
  HIDDEN: 'HIDDEN',
  DELETED: 'DELETED',
  PENDING: 'PENDING'
};

exports.ReactionType = exports.$Enums.ReactionType = {
  LIKE: 'LIKE',
  LOVE: 'LOVE',
  CARE: 'CARE',
  HAHA: 'HAHA',
  WOW: 'WOW',
  SAD: 'SAD',
  ANGRY: 'ANGRY'
};

exports.StatusAccount = exports.$Enums.StatusAccount = {
  ACTIVE: 'ACTIVE',
  DISABLE: 'DISABLE',
  RESTRICTED: 'RESTRICTED',
  CHECKPOINT: 'CHECKPOINT',
  BANNED: 'BANNED',
  DEACTIVATED: 'DEACTIVATED'
};

exports.Gender = exports.$Enums.Gender = {
  MALE: 'MALE',
  FEMALE: 'FEMALE',
  OTHER: 'OTHER'
};

exports.UserFlag = exports.$Enums.UserFlag = {
  SUSPENDED: 'SUSPENDED',
  DELETED: 'DELETED',
  ACTIVE: 'ACTIVE',
  OFFLINE: 'OFFLINE',
  HIDDEN: 'HIDDEN'
};

exports.UserRole = exports.$Enums.UserRole = {
  ADMINISTRATOR: 'ADMINISTRATOR',
  USER: 'USER'
};

exports.Status = exports.$Enums.Status = {
  PENDING: 'PENDING',
  ACCEPTED: 'ACCEPTED',
  DECLINED: 'DECLINED',
  BLOCKED: 'BLOCKED'
};

exports.RelationType = exports.$Enums.RelationType = {
  FARTHER: 'FARTHER',
  MORTHER: 'MORTHER',
  DAUGHTER: 'DAUGHTER',
  SON: 'SON',
  YOUNG_SISTER: 'YOUNG_SISTER',
  YOUNG_BROTHER: 'YOUNG_BROTHER',
  SISTER: 'SISTER',
  BROTHER: 'BROTHER'
};

exports.Platform = exports.$Enums.Platform = {
  GITHUB: 'GITHUB',
  INSTAGRAM: 'INSTAGRAM',
  TIKTOK: 'TIKTOK',
  YOUTUBE: 'YOUTUBE',
  THREADS: 'THREADS',
  X: 'X',
  SNAPCHAT: 'SNAPCHAT',
  TWITCH: 'TWITCH',
  WHATSAPP: 'WHATSAPP',
  LINE: 'LINE',
  WECHAT: 'WECHAT',
  KIK: 'KIK',
  PINTEREST: 'PINTEREST',
  TUMBLR: 'TUMBLR',
  ASK_FM: 'ASK_FM',
  SOUNDCLOUD: 'SOUNDCLOUD',
  SPOTIFY: 'SPOTIFY',
  LINKEDIN: 'LINKEDIN',
  SKYPE: 'SKYPE',
  QQ: 'QQ',
  KAKAO_TALK: 'KAKAO_TALK',
  VK: 'VK',
  OK: 'OK',
  OCULUS: 'OCULUS'
};

exports.AuthType = exports.$Enums.AuthType = {
  VERIFICATION: 'VERIFICATION',
  RESET_PASSWORD: 'RESET_PASSWORD',
  REACTIVE: 'REACTIVE',
  RECOVERY: 'RECOVERY'
};

exports.Prisma.ModelName = {
  Media: 'Media',
  Notification: 'Notification',
  Post: 'Post',
  Comment: 'Comment',
  Reaction: 'Reaction',
  User: 'User',
  Friendship: 'Friendship',
  Relation: 'Relation',
  Email: 'Email',
  Phone: 'Phone',
  SocialLinkeds: 'SocialLinkeds',
  Authentication: 'Authentication',
  Session: 'Session'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
